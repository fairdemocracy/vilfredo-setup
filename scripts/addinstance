#!/bin/bash
##########################################################################
# Vilfredo easy installation script
# Developed by Massimiliano Alessandri <massimiliano.alessandri@gmail.com>
# version 1.0 - on 10/05/2016 - 11/05/2016
# Released under Affero General Public License
##########################################################################
if [ ! -x "/usr/bin/dialog" ]; then
  echo "This script requires the \"dialog\" package to be installed"
  echo "Please install it with the command \"sudo apt-get install dialog\"."
  exit
fi

if [ ! -x "/usr/bin/sudo" ]; then
  dialog --title "Sudo command not found" --msgbox 'The "sudo" program must be installed in order to proceed.\nPlease install it, as root user, with the following command:\n\napt-get install sudo' 9 70
  exit
fi

dialog --backtitle "Vilfredo instance installation procedure" --yesno 'Welcome to Vilfredo installation!\nThis procedure has been designed and tested on Debian GNU/Linux.\nIt might work on Ubuntu GNU/Linux as well.\n\nIn the next screens, you will be prompted to enter some details in order to setup a new instance of the system.\nPlease note you will need sudo rights in order to proceed.\nIf you wish to abort installation, select "No" now.' 14 70
if [ "$?" != "0" ]; then
  exit
fi

if [ -d "/dev/shm/" ]; then
  TMP="/dev/shm/vilfredo"
elif [ -d "/run/shm" ]; then
  TMP="/run/shm/vilfredo"
elif [ -d "/tmp" ]; then
  TMP="/tmp/vilfredo"
else
  TMP="./vilfredo-tmp"
fi

mkdir -p $TMP

#################################################################################
# Install required packages (some of them could be already present on the system)
#################################################################################
echo "Installing or updating required Debian packages..."
sudo apt-get update
sudo apt-get install vim python-virtualenv python-dev libmysqlclient-dev libsqlite3-0 graphviz git gcc sudo nginx-full ntpdate mysql-server postfix libjansson4 libmatheval1 libyaml-0-2 libzmq3 uuid-dev libcap-dev libssl-dev libssl-doc libpcre3-dev libpcrecpp0

#######################################
# Install customized uwsgi-pypy package
#######################################
if [ ! -x "/usr/bin/uwsgi-pypy" ]; then
  echo "Installing customized uwsgi-pypy package from GitHub repository..."
  wget https://raw.githubusercontent.com/fairdemocracy/vilfredo-setup/master/uwsgi-pypy.deb -O $TMP/uwsgi-pypy.deb
  sudo dpkg -i $TMP/uwsgi-pypy.deb
  rm $TMP/uwsgi-pypy.deb
fi

#######################
# Install Let's Encrypt
#######################
if [ ! -d "/usr/local/letsencrypt" ]; then
  CURRENT_DIR=`pwd`
  sudo git -C /usr/local clone https://github.com/letsencrypt/letsencrypt
  cd $CURRENT_DIR
fi

#############################
# Generate passwords randomly
#############################
VILFREDO_SECRET_KEY=`< /dev/urandom tr -dc A-Za-z0-9 | head -c${1:-32}; echo;`
VILFREDO_ENCRYPTION_SALT=`< /dev/urandom tr -dc A-Za-z0-9 | head -c${1:-32}; echo;`

####################
# Request parameters
####################
NAME=$(dialog --backtitle "Vilfredo new instance installation" --inputbox "Please enter the name of the instance to be created." 8 70 --output-fd 1)

if [ "$NAME" == "" ]; then
  dialog --backtitle "Vilfredo new instance installation" --title 'Empty instance name' --msgbox "The name of the instance to be created has not been specified.\nCannot proceed with installation procedure." 7 70
  exit
fi

if [ -d "/etc/$NAME" ]; then
  dialog --backtitle "Vilfredo new instance installation" --title 'Configuration folder already exists!' --msgbox "A configuration folder named /etc/$NAME already exists!\nInstance cannot be created.\nPlease choose another name or manually remove the /etc/$NAME folder." 9 70
  exit
fi

if [ -d "/etc/cron.hourly/$NAME" ]; then
  dialog --backtitle "Vilfredo new instance installation" --title 'Cron job already exists!' --msgbox "A cron job file named /etc/cron.hourly/$NAME already exists!\nInstance cannot be created.\nPlease choose another name or manually remove the /etc/cron.hourly/$NAME file." 9 70
  exit
fi

if [ -d "/home/$NAME" ]; then
  dialog --backtitle "Vilfredo new instance installation" --title 'Home folder already exists!' --msgbox "A folder named /home/$NAME already exists!\nInstance cannot be created.\nPlease choose another name or manually remove the /home/$NAME folder." 9 70
  exit
fi

if id "$NAME" > /dev/null 2>&1; then
  dialog --backtitle "Vilfredo new instance installation" --title "User \"$NAME\" already exists" --msgbox "A system user named \"$NAME\" already exists.\nInstance cannot be created.\nPlease choose another name or manually remove the \"$NAME\" user." 9 70
  exit
fi

if [ $(getent group $NAME) ]; then
  dialog --backtitle "Vilfredo new instance installation" --title "Group \"$NAME\" already exists" --msgbox "A system group named \"$NAME\" already exists.\nInstance cannot be created.\nPlease choose another name or manually remove the \"$NAME\" group." 9 70
  exit
fi

######################
# Install the database
######################
choices=$(dialog --backtitle "Vilfredo new instance installation" --title "Vilfredo database" --radiolist "Would you like to create a new database or reuse an existing one?\nPlease consider connecting to external databases requires proper authorizations to be set up and usually MySQL and/or firewall configuration. This should be set up by an expert system administrator in order to prevent security issues.\nThe above warning does not apply if database is on this same server.\n\nSelecting the first option, if another database with the same name as the instance already exist, the procedure will be interrupted and no contents will be altered.\nIf you choose the second option, you will be prompted to enter database credentials in next screen." 20 76 16 \
1 "Create a new database" on \
2 "Connect to existing database" off \
2>&1 >/dev/tty)
if [ "$?" != "0" ]; then
  dialog --backtitle "Vilfredo new instance installation" --title "Interrupted by user" --msgbox "The installation procedure has been interrupted.\nNothing has been changed on server." 7 70
  exit
fi
clear
for choice in $choices
do
  case $choice in
    1)
      MYSQL_ROOT_PASSWORD=$(dialog --backtitle "Vilfredo new instance installation" --title "MySQL root password" --clear --insecure --passwordbox 'Please enter the password for the MySQL "root" user, which is needed in order to connect to the server and create the database.' 9 70 --output-fd 1)
      case $? in
        1)
          exit;;
        255)
          exit;;
      esac
      RESULT=`mysqlshow --user=root --password=$MYSQL_ROOT_PASSWORD | grep -v Wildcard | grep -o $NAME`
      if [ "$RESULT" == "$NAME" ]; then
        dialog --backtitle "Vilfredo new instance installation" --title 'Database "$NAME" already exists!' --msgbox "A MySQL database named \"$NAME\" already exists!\nDatabase has NOT been deleted. Please choose another name, or else manually perform a backup, or delete database, before proceeding.\nInstance cannot be created." 8 70
        exit
      fi
      if [ "$?" == "1" ]; then
        dialog --backtitle "Vilfredo new instance installation" --title 'Could not connect to MySQL server' --msgbox "An error occurred while attempting to connect to MySQL database server running on localhost.\nPlease check you entered the right password." 7 70
        exit
      fi
      VILFREDO_MYSQL_PASSWORD=`< /dev/urandom tr -dc A-Za-z0-9 | head -c${1:-32}; echo;`
      wget https://raw.githubusercontent.com/fairdemocracy/vilfredo-setup/master/database.sql -O $TMP/database.sql
      # Enter MySQL command line prompt (please enter your MySQL root password to proceed)
      # Replace "vilfredo" with the name of the database you want to use for Vilfredo installation
      # Replace "vilfredo_mysql_password" with your chosen "vilfredo" user MySQL password
      echo "Creating MySQL database $NAME..."
      mysql --user=root --password=$MYSQL_ROOT_PASSWORD -e "DROP DATABASE IF EXISTS $NAME;CREATE DATABASE $NAME;USE $NAME;SET NAMES UTF8;SOURCE $TMP/database.sql;GRANT USAGE ON *.* TO '$NAME'@'localhost' IDENTIFIED BY '$VILFREDO_MYSQL_PASSWORD';GRANT SELECT, INSERT, UPDATE, DELETE ON $NAME.* TO $NAME@localhost;"
      rm $TMP/database.sql
      ;;
    2)
      exec 3>&1;
      result=$(dialog --backtitle "Vilfredo new instance installation" --title "MySQL connection settings" \
      --form "Please enter the credentials for the existing MySQL database.\nDouble check them: in case they are incorrect, the instance will not be able to connect to the database.\n\nThese will be stored into /etc/$NAME/settings.cfg file." 19 58 6 \
      "MySQL Server:" 1 1 "localhost" 1 20 32 80 \
      "Port:" 2 1 "3306" 2 20 32 5 \
      "Username:" 3 1 "" 3 20 32 32 \
      "Password:" 4 1 "" 4 20 32 32 \
      "Database name:" 5 1 "" 5 20 32 60 2>&1 1>&3);
      exitcode=$?;
      exec 3>&-;
      if [ "$exitcode" == "1" -o "$exitcode" == "255" ]; then
        dialog --backtitle "Vilfredo new instance installation" --title "Interrupted by user" --msgbox "The installation procedure has been interrupted.\nNothing has been changed on server." 7 70
        exit
      fi
      MYSQL_PARAMS=($(awk -F: '{$1=$1} 1' <<<"${result}"))
      ;;
  esac
done

DOMAIN=$(dialog --backtitle "Vilfredo new instance installation" --clear --inputbox "Please enter the domain name to be assigned to this instance.\n\nDo not enter the \"www.\" prefix! It will be automatically prepended." 11 70 --output-fd 1)
if [ "$?" != "0" ]; then
  dialog --backtitle "Vilfredo new instance installation" --title "Interrupted by user" --msgbox "The installation procedure has been interrupted.\nNothing has been changed on server." 7 70
  exit
fi

dialog --backtitle "Vilfredo new instance installation" --clear --yesno "Do you want to also add the www.$DOMAIN subdomain name to the configuration?\nThis must have been already configured in the DNS.\nPlease check twice it actually exists, otherwise no SSL certificate will be generated and the website will remain unsecured (accessible through the HTTP protocol only).\nSuch a situation can only be repaired by adding the missing entry into the DNS, deleting and recreating the instance, or manually fixed." 14 70
NO_WWW_DOMAIN="$?"

CORE_BRANCH=$(dialog --backtitle "Vilfredo new instance installation" --clear --inputbox "Please enter the name of the vilfredo-core code branch to be loaded into this instance:" 9 70 master --output-fd 1)
CLIENT_BRANCH=$(dialog --backtitle "Vilfredo new instance installation" --clear --inputbox "Please enter the name of the vilfredo-client code branch to be loaded into this instance:" 9 70 master --output-fd 1)

GOOGLE_CODE=$(dialog --backtitle "Vilfredo new instance installation" --clear --inputbox "Please enter the Google unique identification code to track this website using Google Analytics.\nThis can be safely omitted and entered later by editing the following file:\n\n/home/$NAME/vilfredo-client/static/templates/analytics.template.html" 13 80 UA-XXXXXXXX-X --output-fd 1)

exec 3>&1;
result=$(dialog --backtitle "Vilfredo new instance installation" --title "Mail server settings" \
--form "Vilfredo needs a mail server in order to send notifications and other kind of messages to its users.\nNowadays, it has become increasingly difficult to send mail messages such a way which will not make them consider spam by major providers such as GMail or MSN.\nYou can set up a mail server following a guide, but this might be rather difficult (requires adding some keys to the DNS) and should be left to experienced system administrators only.\nAlternatively, you might as well resort to an external mail server, using SMTP authentication.\nIn this case, edit default values with your mail server credentials." 20 70 6 \
"SMTP Server:" 1 1 "localhost" 1 30 34 80 \
"Port:" 2 1 "25" 2 30 34 80 \
"Username (or email address):" 3 1 "" 3 30 34 80 \
"Authentication password:" 4 1 "" 4 30 34 80 2>&1 1>&3);
exitcode=$?;
exec 3>&-;

if [ "$exitcode" == "1" -o "$exitcode" == "255" ]; then
  dialog --backtitle "Vilfredo new instance installation" --title "Interrupted by user" --msgbox "The installation procedure has been interrupted.\nNothing has been changed on server." 7 70
  exit
fi

SMTP_PARAMS=($(awk -F: '{$1=$1} 1' <<<"${result}"))

#####################
# Install application
#####################
sudo adduser --disabled-password --gecos "$NAME instance user" $NAME
if [ "$?" == "1" ]; then
  dialog --backtitle "Vilfredo new instance installation" --title "Cannot create system user and group" --msgbox "An error occurred while attempting to create system user or group.\nPlease try again later." 7 70
  deluser $NAME
  delgroup $NAME
  exit
fi

echo "Creating folder for instance $NAME..."
cd /home/$NAME
echo "Downloading vilfredo-core $CORE_BRANCH repository..."
sudo -u $NAME git clone -b $CORE_BRANCH https://github.com/fairdemocracy/vilfredo-core.git
echo "Downloading vilfredo-client $CLIENT_BRANCH repository..."
git clone -b $CLIENT_BRANCH https://github.com/fairdemocracy/vilfredo-client.git; \
sudo -u $NAME \
virtualenv vilfredo-ve --python=/usr/bin/pypy; \
. vilfredo-ve/bin/activate; \
pip install -U setuptools; \
pip install itsdangerous==0.23; \
pip install argparse==1.2.1; \
pip install alembic==0.7.4; \
pip install Flask-Script==0.6.7; \
pip install Flask-Migrate==1.3.0; \
pip install Pillow==2.8.1; \
pip install requests==2.7.0; \
pip install ipython==4.0.0; \
pip install Flask==0.10; \
pip install Flask-Mail==0.8.2; \
pip install Flask-Babel==0.8; \
pip install Flask-Login==0.2.6; \
pip install SQLAlchemy==0.8.2; \
pip install Flask-SQLAlchemy==1.0; \
pip install Flask-CDN==1.2.1; \
pip install flask-util-js==0.2.19; \
pip install MySQL-python==1.2.5; \
pip install pyparsing==1.5.7; \
pip install pydot==1.0.2
# Create symbolic links
sudo -u $NAME ln -sf /home/$NAME/vilfredo-client/static /home/$NAME/vilfredo-core/VilfredoReloadedCore/static
sudo -u $NAME ln -sf /home/$NAME/vilfredo-client/templates /home/$NAME/vilfredo-core/VilfredoReloadedCore/templates
sudo chgrp www-data /home/$NAME/vilfredo-client/static

echo "Configuring instance $NAME..."
sudo mkdir /etc/$NAME
sudo chown $NAME:www-data /etc/$NAME
# Configure "settings.cfg" (Vilfredo core settings)
sudo -u $NAME wget https://raw.githubusercontent.com/fairdemocracy/vilfredo-setup/master/settings.cfg -O /etc/$NAME/settings.cfg
if [ "$NO_WWW_DOMAIN" == "1" ]; then
  sudo -u $NAME sed -i s/www.vilfredo.org/$DOMAIN/g /etc/$NAME/settings.cfg
else
  sudo -u $NAME sed -i s/www.vilfredo.org/www.$DOMAIN/g /etc/$NAME/settings.cfg
fi
sudo -u $NAME sed -i s/https/https/g /etc/$NAME/settings.cfg
sudo -u $NAME sed -i s/home\\/vilfredo/home\\/$NAME/g /etc/$NAME/settings.cfg
sudo -u $NAME sed -i "s/MAIL_SERVER = 'localhost/MAIL_SERVER = '${SMTP_PARAMS[0]}/g" /etc/$NAME/settings.cfg
sudo -u $NAME sed -i "s/MAIL_PORT = 25/MAIL_PORT = ${SMTP_PARAMS[1]}/g" /etc/$NAME/settings.cfg
if [ "$SMTP_PARAMS[2]" != "" ]; then
  sudo -u $NAME sed -i "s/MAIL_USERNAME = None/MAIL_USERNAME = '${SMTP_PARAMS[2]}'/g" /etc/$NAME/settings.cfg
fi
if [ "$SMTP_PARAMS[3]" != "" ]; then
  sudo -u $NAME sed -i "s/MAIL_PASSWORD = None/MAIL_PASSWORD = '${SMTP_PARAMS[3]}'/g" /etc/$NAME/settings.cfg
fi
if [ -z "$MYSQL_PARAMS" ]; then
  sudo -u $NAME sed -i s/vilfredo_mysql_password/$VILFREDO_MYSQL_PASSWORD/g /etc/$NAME/settings.cfg
else
  sudo -u $NAME sed -i "s/mysql+mysqldb:\\/\\/vilfredo:vilfredo_mysql_password@localhost\\/vilfredo/mysql+mysqldb:\\/\\/${MYSQL_PARAMS[2]}:${MYSQL_PARAMS[3]}@${MYSQL_PARAMS[0]}\\/${MYSQL_PARAMS[4]}/g" /etc/$NAME/settings.cfg
fi
sudo -u $NAME sed -i s/secret_key/$VILFREDO_SECRET_KEY/g /etc/$NAME/settings.cfg
sudo -u $NAME sed -i s/vilfredo_salt/$VILFREDO_ENCRYPTION_SALT/g /etc/$NAME/settings.cfg
sudo -u $NAME ln -sf /etc/$NAME/settings.cfg /home/$NAME/vilfredo-core/VilfredoReloadedCore
# Configure "settings.js"
sudo mv /home/$NAME/vilfredo-client/static/js/settings.js /etc/$NAME
if [ "$NO_WWW_DOMAIN" == "1" ]; then
  sudo -u $NAME sed -i s/127.0.0.1:8080/$DOMAIN/g /etc/$NAME/settings.js
else
  sudo -u $NAME sed -i s/127.0.0.1:8080/www.$DOMAIN/g /etc/$NAME/settings.js
fi
sudo -u $NAME sed -i s/https/http/g /etc/$NAME/settings.js
sudo -u $NAME ln -sf /etc/$NAME/settings.js /home/$NAME/vilfredo-client/static/js
# Configure "logging_debug.conf"
sudo -u $NAME wget https://raw.githubusercontent.com/fairdemocracy/vilfredo-setup/master/logging_debug.conf -O /etc/$NAME/logging_debug.conf
sudo -u $NAME ln -sf /etc/$NAME/logging_debug.conf /home/$NAME/vilfredo-core/VilfredoReloadedCore
# Set Google Analytics code
sed -i s/UA-XXXXXXXX-X/$GOOGLE_CODE/g /home/$NAME/vilfredo-client/static/templates/analytics.template.html
# Create log folder
sudo mkdir /var/log/$NAME
sudo chown $NAME /var/log/$NAME
# This file is not needed in this setup - delete it if it has been downloaded from repository
sudo -u $NAME rm /home/$NAME/vilfredo-core/VilfredoReloadedCore/main.py
sudo chgrp -R www-data /home/$NAME

############################
# Configure NGINX web server
############################
echo "Configuring NGINX web server for new instance $NAME..."
# Note: This folder exists only to allow SSL certificate validation
sudo -u $NAME mkdir /home/$NAME/www
if [ ! -f "/etc/nginx/dhparam.pem" ]; then
  sudo openssl dhparam -out /etc/nginx/dhparam.pem 4096
  sudo chmod 600 /etc/nginx/dhparam.pem
fi

if [ ! -f "/etc/nginx/snippets/ssl.conf" ]; then
  sudo cat > /etc/nginx/snippets/ssl.conf <<EOF
ssl on;
ssl_dhparam               dhparam.pem;
ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
ssl_session_timeout       5m;
ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA:!CAMELLIA;
ssl_prefer_server_ciphers on;
ssl_stapling              on;
ssl_stapling_verify       on;
resolver                  8.8.4.4 8.8.8.8 valid=300s;
resolver_timeout          5s;
add_header                Strict-Transport-Security "max-age=31536000";
EOF
fi

if [ "$NO_WWW_DOMAIN" == "1" ]; then
  DOMAINS=$DOMAIN
else
  DOMAINS="www.$DOMAIN $DOMAIN"
fi
sudo cat > /etc/nginx/sites-available/$NAME <<EOF
server {
  listen 80;
  listen [::]:80;

  server_name $DOMAINS;

  #include              snippets/ssl.conf;
  #ssl_certificate      /etc/letsencrypt/live/$DOMAIN/fullchain.pem;
  #ssl_certificate_key  /etc/letsencrypt/live/$DOMAIN/privkey.pem;

  location /static {
    root /home/$NAME/vilfredo-client/static;
    try_files \$uri =404;
  }
  location /templates {
    root /home/$NAME/vilfredo-client/static/templates;
    try_files \$uri =404;
  }
  location / {
    # Note: This only exists in order to allow SSL certificate validation
    root /home/$NAME/www;
    try_files \$uri @vilfredo;
  }
  location @vilfredo {
    include uwsgi_params;
    uwsgi_pass unix:/tmp/uwsgi_$NAME.sock;
  }
  # Enables GZIP compression if not already enabled
  gzip on;
  gzip_disable "msie6";
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 9;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

}
EOF

sudo ln -sf /etc/nginx/sites-available/$NAME /etc/nginx/sites-enabled

sudo cat > /etc/uwsgi-pypy/apps-available/$NAME.ini <<EOF
[uwsgi]
# Note: We cannot use /var/run/uwsgi_$NAME.sock due to permissions issues
socket=/tmp/uwsgi_$NAME.sock
chmod-socket=666
abstract-socket=false

master=true
workers=2

uid=$NAME
gid=www-data

post-buffering=8192

vhost=true
chdir=/home/$NAME

# Configuration when running under Python
pp=/home/$NAME/vilfredo-core/VilfredoReloadedCore
venv=/home/$NAME/vilfredo-ve
module=main
callable=app

# Configuration when running under PyPy
pypy-lib=/usr/lib/pypy/libpypy-c.so
pypy-pp=/home/$NAME/vilfredo-core
pypy-home=/home/$NAME/vilfredo-ve
pypy-wsgi=VilfredoReloadedCore:app
EOF
sudo ln -sf /etc/uwsgi-pypy/apps-available/$NAME.ini /etc/uwsgi-pypy/apps-enabled

echo "Restarting web services..."
sudo service uwsgi-pypy reload
sudo service nginx restart

#########################
# Request SSL certificate
#########################
echo "Requesting a free SSL certificate for https://$DOMAIN"
# Note: Only now that we've configured NGINX, we can request the certificate
if [ "$NO_WWW_DOMAIN" == "1" ]; then
  sudo /usr/local/letsencrypt/letsencrypt-auto certonly --webroot -w /home/$NAME/www -d $DOMAIN
  RET="$?"
else
  sudo /usr/local/letsencrypt/letsencrypt-auto certonly --webroot -w /home/$NAME/www -d $DOMAIN -d www.$DOMAIN
  RET="$?"
fi
if [ "$RET" == "1" ]; then
  sudo sed -i s/https:/http:/g /etc/$NAME/settings.js
  sudo sed -i s/https:/http:/g /etc/$NAME/settings.cfg
  echo "Restarting web services..."
  sudo service uwsgi-pypy reload
  dialog --backtitle "Vilfredo new instance installation" --title "Cannot install SSL certificate" --msgbox "A problem occurred while attempting to obtain a free SSL certificate from Let's Encrypt.\nThe web site will run unsecured (with the HTTP protocol).\nPlease fix this problem manually, or otherwise delete and recreate the instance later." 8 70
else
  sudo sed -i s/#include/include/g /etc/nginx/sites-available/$NAME
  sudo sed -i s/#ssl_/ssl_/g /etc/nginx/sites-available/$NAME
  sudo sed -i s/http:/https:/g /etc/$NAME/settings.js
  sudo sed -i s/http:/https:/g /etc/$NAME/settings.cfg
  echo "Restarting web services..."
  sudo service uwsgi-pypy reload
  sudo service nginx restart
fi

###########################################################
# Adding a cron job to automatically renew SSL certificates
###########################################################
if [ ! -f "/etc/cron.monthly/letsencrypt" ]; then
  echo "Adding cron job to automatically renew SSL certificates..."
  sudo cat > /etc/cron.monthly/letsencrypt <<EOF
#!/bin/sh
service nginx stop
/usr/local/letsencrypt/letsencrypt-auto renew -nvv --standalone > /var/log/letsencrypt/renew.log 2>&1
LE_STATUS=$?
service nginx start
if [ "$LE_STATUS" != 0 ]; then
  echo Automated renewal failed:
  cat /var/log/letsencrypt/renew.log
  exit 1
fi
EOF
  sudo chmod 700 /etc/cron.monthly/letsencrypt
fi

#########################################################
# Adding a script to keep website in sync with repository
#########################################################
# Note: This not optimal (the process should be triggered on every commit)
# but that's the easiest solution at the moment
echo "Adding script to automatically update code from repository $BRANCH..."
sudo -u $NAME mkdir /home/$NAME/bin
sudo cat > /home/$NAME/bin/checkout <<EOF
sudo -u $NAME git -C /home/$NAME/vilfredo-core checkout
sudo -u $NAME git -C /home/$NAME/vilfredo-client checkout
EOF
sudo chmod u+x /home/$NAME/bin/checkout
dialog --backtitle "Vilfredo new instance installation" --title 'GIT checkout script created' --yesno "An easy to execute script, named /home/$NAME/bin/checkout, has been created for you.\nThis can be manually invoked to update instance code downloading latest changes from the GIT repository.\nWould you like to configure a cron job, executed each hour, in order to automate the process and always keep the code in sync with latest changes?" 12 70
if [ "$?" == "0" ]; then
  sudo ln -s /home/$NAME/bin/checkout /etc/cron.hourly/$NAME
  sudo chmod 700 /etc/cron.hourly/$NAME
fi

# Removes temporary folder
rm -rf $TMP

# Display the successful install confirmation message
dialog --backtitle "Vilfredo new instance installation" --title 'Vilfredo instance installation completed' --msgbox "A new Vilfredo instance named \"$NAME\" has been installed successfully!\nIf you have already configured DNS, you will find it at http://$DOMAIN/" 9 70
